{"mappings":"YAAA,IAAMA,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAAcH,SAASC,cAAc,mBAC5BD,SAASC,cAAc,mBAE/BG,iBAAiB,SAAS,SAAAC,G,kBAO7B,IAYmBC,EAAUC,EAZvBC,EAAeC,GAAcC,EAAI,GAAKC,GAYzBL,EAVLI,EAUeH,EAVZC,EAWZ,IAAII,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KAlBAW,MAAK,SAAAC,GAAWA,EAARb,SAAea,EAALZ,MACjBa,QAAQC,IAAI,uBAAiCC,OAARZ,EAAE,QAAmBY,OAAbd,EAAa,M,IAE3De,OAAM,SAAAJ,GAAWA,EAARb,SAAea,EAALZ,MAClBa,QAAQC,IAAI,sBAA8BC,OAARZ,EAAE,QAAmBY,OAAbd,EAAa,M,KAb7DH,EAAEmB,iBAKF,IAJA,IAAMC,EAASC,OAAOvB,EAAYwB,OAC5BlB,EAAaiB,OAAO3B,EAAW4B,OAC/BhB,EAAOe,OAAOxB,EAAUyB,OAErBC,EAAI,EAAGA,GAAKH,EAAQG,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = document.querySelector('[name=delay]');\nconst delayStep = document.querySelector('[name=step]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst button = document.querySelector('[type=\"submit\"]');\n\nbutton.addEventListener('click', e => {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  const startDelay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = startDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","position","delay","currentDelay","startDelay","i","step","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","concat","catch","preventDefault","amount","Number","value","i1","_loop"],"version":3,"file":"03-promises.58b3b5d0.js.map"}