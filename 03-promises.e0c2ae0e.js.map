{"mappings":"qhBAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAWT,EAXmBC,EAWhB,UAVOG,KAAKC,SAAW,GAGpCC,EAAAJ,GAASK,OAAOC,QAAQ,qBAAqBR,QAAeC,OAG5DK,EAAAJ,GAASK,OAAOE,QAAQ,oBAAoBT,QAAeC,SAK5DS,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBZ,QAAiBC,OAClDK,EAAAJ,GAASK,OAAOC,QAAQ,qBAAqBR,QAAeC,MAAU,IAEvEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBZ,QAAeC,OAC/CK,EAAAJ,GAASK,OAAOE,QAAQ,oBAAoBT,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","$1GAPJ","parcelRequire","Math","random","$parcel$interopDefault","Notify","success","failure","then","console","log","catch"],"version":3,"file":"03-promises.e0c2ae0e.js.map"}